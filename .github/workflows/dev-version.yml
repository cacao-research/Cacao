name: Bump Version on Dev
on:
  push:
    branches: [ dev ]
permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read current version
        id: ver
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Calculate next dev version
        id: bump
        shell: bash
        run: |
          # Get current version
          ver="${{ steps.ver.outputs.version }}"

          # Extract base version (strip .devN and -rc.N)
          base_ver=$(echo "$ver" | sed 's/\.dev[0-9]*$//' | sed 's/-rc\.[0-9]*$//')

          if [[ "$ver" =~ \.dev([0-9]+)$ ]]; then
              # Increment dev number
              dev_num=$((${BASH_REMATCH[1]} + 1))
              new_version="${base_ver}.dev${dev_num}"
          elif [[ "$ver" =~ -rc\.([0-9]+)$ ]]; then
              # Reset to dev1 with same patch
              new_version="${base_ver}.dev1"
          else
              # New release cycle - increment patch
              IFS='.' read -r -a parts <<< "$base_ver"
              maj=${parts[0]}
              min=${parts[1]}
              patch=$((${parts[2]} + 1))
              new_version="${maj}.${min}.${patch}.dev1"
          fi
          
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

      - name: Write new version
        run: |
          echo "${{ steps.bump.outputs.new_version }}" > VERSION
          sed -i "s|^__version__ = .*|__version__ = \"${{ steps.bump.outputs.new_version }}\"|" cacao/__init__.py

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION cacao/__init__.py
          git commit -m "ðŸ”– Bump to ${{ steps.bump.outputs.new_version }} [skip ci]"
          git push origin dev

name: Bump Version on Dev
on:
  push:
    branches: [ dev ]
permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read current version
        id: ver
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Calculate next dev version
        id: bump
        shell: bash
        run: |
          ver="${{ steps.ver.outputs.version }}"
          # Split into an array so suffixes don't get lumped into $patch
          IFS='.' read -r -a parts <<< "$ver"
          maj=${parts[0]}
          min=${parts[1]}
          patch=${parts[2]}
          next=$((patch + 1))
          echo "new_version=${maj}.${min}.${next}.dev1" >> $GITHUB_OUTPUT

      - name: Write new version
        run: |
          echo "${{ steps.bump.outputs.new_version }}" > VERSION
          sed -i "s|^__version__ = .*|__version__ = \"${{ steps.bump.outputs.new_version }}\"|" cacao/__init__.py

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION cacao/__init__.py
          git commit -m "ðŸ”– Bump to ${{ steps.bump.outputs.new_version }} [skip ci]"
          git push origin dev